openapi: 3.0.1
info:
  title: Person and Avatar API
  description: Test swagger
  contact:
    name: Danil
    url: https://myWebsite.ru
    email: myEmail@email.ru
  license:
    name: Apache 2.0
  version: 2.0.0
servers:
- url: http://localhost:8080
  description: Main server
- url: http://localhost:8081
  description: Spare server
tags:
- name: Avatar API hidden
  description: Secret controller
- name: 'Full Avatar API '
  description: Everything about avatars
- name: Full Person API
  description: Everything about persons
- name: 'Required API '
  description: Required for server operation
paths:
  /api/v2/persons/newPerson:
    post:
      tags:
      - 'Required API '
      - Full Person API
      summary: Create person
      operationId: addPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDtoOnlyId'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
        "403":
          description: Access blocked
  /api/v2/images/uploadImage:
    post:
      tags:
      - 'Required API '
      - 'Full Avatar API '
      summary: Uploads an images
      operationId: imageUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - img
              type: object
              properties:
                img:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvatarDto'
        "415":
          description: The server refuses to accept the request
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
        "403":
          description: Access blocked
  /api/v2/persons/{personId}:
    get:
      tags:
      - Full Person API
      summary: Find person by ID
      operationId: getUserById
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
        "403":
          description: Access blocked
    patch:
      tags:
      - Full Person API
      summary: Update status person by ID
      operationId: updateStatusOnOnline
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        required: true
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDtoStatus'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
        "403":
          description: Access blocked
  /api/v2/persons:
    get:
      tags:
      - Full Person API
      summary: Get all persons
      operationId: getAllPerson
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonsDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
        "403":
          description: Access blocked
  /api/v2/persons/findByStatus:
    get:
      tags:
      - Full Person API
      summary: Get all persons by status
      operationId: getAllPersonsOnOnline
      parameters:
      - name: status
        in: query
        required: true
        content:
          '*/*':
            schema:
              type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonsDto'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
  /api/v2/images:
    get:
      tags:
      - 'Full Avatar API '
      - Avatar API hidden
      summary: Get all avatars
      operationId: getAllUrlImage
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Avatar'
        "400":
          description: Client Error
        "500":
          description: An error occurred on the server
        "403":
          description: Access blocked
components:
  schemas:
    Person:
      type: object
      properties:
        personId:
          type: integer
          format: int64
          readOnly: true
        url:
          type: string
        personName:
          type: string
        email:
          type: string
        status:
          type: string
          readOnly: true
        oldStatus:
          type: string
          readOnly: true
    PersonDtoOnlyId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    AvatarDto:
      type: object
      properties:
        urlPicture:
          type: string
    PersonDtoStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        newStatus:
          type: string
        oldStatus:
          type: string
    PersonsDto:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
    PersonDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        url:
          type: string
        personName:
          type: string
        email:
          type: string
        status:
          type: string
    Avatar:
      type: object
      properties:
        avatarId:
          type: integer
          format: int64
          readOnly: true
        urlPicture:
          type: string
